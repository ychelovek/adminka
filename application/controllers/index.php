<?php defined('SYSPATH') OR die('No direct access allowed.');
/**
 * Default Kohana controller. This controller should NOT be used in production.
 * It is for demonstration purposes only!
 *
 * @package    Core
 * @author     Kohana Team
 * @copyright  (c) 2007-2008 Kohana Team
 * @license    http://kohanaphp.com/license.html
 */

/**
Index_Controller

@brief Контроллер авторизации в @b панеле @b администратора

При авторизации переместит в @ref Pages_Controller
*/
class Index_Controller extends Crud_Controller {

	//const ALLOW_PRODUCTION = FALSE;

	/** Основной файл темы*/
	public $template = 'generic';
	public function index()
	{
	/**
	@brief Авторизация в @b панеле @b администратора

	При авторизации переместит в @ref Pages_Controller
	*/
		$db = Database::instance();
		
		$user_id = $this->input->cookie('id');
		$user_group_id = $this->input->cookie('group_id');
		//$user_group_id = cookie::get('user_group_id');
		if($user_id && $user_group_id && $user_group_id==1)
		{
			header('Location: http://'. $_SERVER['SERVER_NAME'] . url::base() . 'pages');
			exit();
		}

		$login = $this->input->post('login');
		$password = $this->input->post('password');
		//$password = md5($password);

		if ( !empty($login) AND !empty($password) )
		{
			if ($login == kohana::config('config.login') and $password == kohana::config('config.password')) {
				cookie::set('id', 1);
				cookie::set('login', $login);
				cookie::set('group_id', 1);
				header('Location: http://'. $_SERVER['SERVER_NAME'] . url::base());
			 	exit();
			} else {
				$err = 'Не верный логин или пароль';
			}
			// $user_login = $db->query('SELECT * FROM users WHERE users.login=? AND users.password=? AND users.group_id=1', array($login, $password))->current();
			
			// if ( $user_login !== FALSE )
			// {
			// 	echo '<br />';
			// 	foreach ($user_login as $key => $value)
			// 	{					
			// 		cookie::set($key, $value);
			// 	}

			// 	header('Location: http://'. $_SERVER['SERVER_NAME'] . url::base());
			// 	exit();
			// }
			// else
			// {
			// 	$err = 'Не верный логин или пароль';
			// }
		}

		$err = (isset($err)) ? $err : NULL;
		$this->template->content = View::factory('login');
		$this->template->content->err = $err;
		
	}

	public function __call($method, $arguments)
	{
	/**

	@brief Функиця исключений.

	Если запрашиваемая функция не найдена, то будет вызвана @b _call функия. 
	
	@param method - название невыполненой функции
	@param arguments - аргументы невыполненой функции
	*/
		header('Location: http://'. $_SERVER['SERVER_NAME'] . url::base() . 'error/');
		exit;
		echo $method; exit;
		// Disable auto-rendering
		$this->auto_render = FALSE;

		// By defining a __call method, all pages routed to this controller
		// that result in 404 errors will be handled by this method, instead of
		// being displayed as "Page Not Found" errors.
		echo __('This text is generated by __call. If you expected the index page, you need to use: :uri:',
				array(':uri:' => 'welcome/index/'.substr(Router::$current_uri, 8)));
	}

} // End Welcome Controller


